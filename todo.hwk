require "Hawck"
require "Notify"

--match[ up + key "s" ] = say("caught")

match[ ~down ] = echo

match[ key "f2" ] = 100 * press "w" .. say "How do you like me now?"

match[ key "oslash" ] = with("AltGr") .. press("7")
match[ key "oslash" ] = with("AltGr", press("7"))
match[ key "oslash" ] = hold("AltGr") .. press("7") .. release("AltGr")
match[ key(9) ] = "{"

a => b

is_disabled = switch(true)

-- Toggle character swapping
"f8" => is_disabled:toggle() .. say("Programming mode: %s", function ()
                                      if is_disabled() then
                                        return "disabled"
                                      else
                                        return "enabled"
                                      end
                                   end)

is_disabled = switch(true, {[true]  = "enabled",
                            [false] = "disabled"})
"f8" => is_disabled:toggle() .. say("Programming mode %s", is_disabled)

-- Echo back character if not swapping
is_disabled => echo

-- Swap Norwegian letters with more useful letters
"ø" => "{"
"Ø" => "["
"Æ" => "]"
"æ" => "}"

match[ shift + key "ae" ] = with("AltGr", press "7")

"F7" => use "programming_mode" .. say "Programming mode enabled"

programming_mode:
  "F7" => use "default" .. say "Programming mode disabled"
  "ø"  => "{"
  "Ø"  => "["
  "Æ"  => "]"
  "æ"  => "}"

function __match_maps.programming_mode()
  local __matches = MatchMap.new()

  __matches[ key "F7"             ] = use "default" .. say "Programming mode disabled"
  __matches[ key "oslash"         ] = with("AltGr", press("7"))
  __matches[ shift + key "oslash" ] = with("AltGr", press("8"))
  __matches[ shift + key "ae"     ] = with("AltGr", press("9"))
  __matches[ key "ae"             ] = with("AltGr", press("0"))

  return __matches
end

function __match_maps.programming_mode()
  local __matches = MatchMap.new()

  __matches[ key "F7"             ] = function ()
    use("default")()
    say("Programming mode disabled")()
  end
  __matches[ key "oslash"         ] = function ()
    hold("AltGr")()
    press("7")()
    release("AltGr")()
  end
  __matches[ shift + key "oslash" ] = function ()
    hold("AltGr")()
    press("8")()
    release("AltGr")()
  end
  __matches[ shift + key "ae"     ] = function ()
    hold("AltGr")()
    press("9")()
    release("AltGr")()
  end
  __matches[ key "ae"             ] = function ()
    hold("AltGr")()
    press("0")()
    release("AltGr")()
  end

  return __matches
end

function __match_maps.programming_mode()
  local __matches = MatchMap.new()

  __matches[ key "F7"             ] = function ()
    _G.__matches = __match_maps["default"]()
    say("Programming mode disabled")()
  end
  __matches[ key "oslash"         ] = function ()
    __emit(Event.KEY, getKeysym("AltGr"), KeyMode.DOWN)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("7"), KeyMode.DOWN)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("7"), KeyMode.UP)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("AltGr"), KeyMode.UP)
    __emit(Event.SYN, 0, 0)
  end
  __matches[ shift + key "oslash" ] = function ()
    __emit(Event.KEY, getKeysym("AltGr"), KeyMode.DOWN)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("8"), KeyMode.DOWN)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("8"), KeyMode.UP)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("AltGr"), KeyMode.UP)
    __emit(Event.SYN, 0, 0)
  end
  __matches[ shift + key "ae"     ] = function ()
    __emit(Event.KEY, getKeysym("AltGr"), KeyMode.DOWN)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("9"), KeyMode.DOWN)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("9"), KeyMode.UP)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("AltGr"), KeyMode.UP)
    __emit(Event.SYN, 0, 0)
  end
  __matches[ key "ae"             ] = function ()
    __emit(Event.KEY, getKeysym("AltGr"), KeyMode.DOWN)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("0"), KeyMode.DOWN)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("0"), KeyMode.UP)
    __emit(Event.SYN, 0, 0)
    __emit(Event.KEY, getKeysym("AltGr"), KeyMode.UP)
    __emit(Event.SYN, 0, 0)
  end

  return __matches
end

-- match[ key "oslash" ] = press("leftbrace")
-- match[ key "ae" ] = press("rightbrace")
